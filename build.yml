# Build info
- build:       bee_go
  default:     all
  description: "Project for bee package bee_go"
  alias:
    release:
    - push
    - tag

# Build properties
- properties:
    name:         "bee_go"
    version:      "0.0.1"
    author:       "Michel Casabianca"
    years:        "2014"
    platform:     "Gem::Platform::RUBY"
    summary:      "Go package for Bee"
    description:  "Bee package to manage Go projects"
    email:        "michel.casabianca@gmail.com"
    homepage:     "http://bee.rubyforge.org"
    rubyforge:    "bee"
    dependencies:
      "bee": [">= 0.11.3"]
    lib_dir:      "lib"
    test_dir:     "test"
    build_dir:    "build"
    readme_erb:   "readme.erb"
    readme_file:  "#{build_dir}/README"
    license_file: "LICENSE"
    gem_spec_erb: "gem.spec.erb"
    gem_spec:     "#{build_dir}/gem.spec"
    gem_package:  "#{name}-#{version}.gem"
    clean_dirs:   :build_dir
    clean_files:  ["**/*~"]

# Build targets
- target:      test
  description: Run unit tests
  script:
  - mkdir: :build_dir
  - test:
      includes: "#{test_dir}/**/tc_*.rb"
      dir:      :test_dir

- target:      gem
  depends:     [clean, test]
  description: Generate Gem package
  script:
  - mkdir: :build_dir
  - erb: { src: :readme_erb, dest: :readme_file }
  - erb: { src: :gem_spec_erb, dest: :gem_spec }
  - gem: :gem_spec
  - mv: { src: :gem_package, dest: :build_dir }

- target:      install
  depends:     gem
  description: Install generated gem
  script:
  - "sudo gem install -l #{build_dir}/#{gem_package}"

- target:      uninstall
  description: Uninstall gem
  script:
  - "sudo gem uninstall -x #{name}"

- target:      push
  depends:     [clean, gem]
  description: Push gem on gemcutter (must have installed gemcutter to run)
  script:
  - "gem push #{build_dir}/#{gem_package}"

- target:      tag
  description: Tag the release and check that there are no uncommited changes
  script:
  - print: "Checking uncommited changes"
  - if: "`git diff origin/master`.length > 0"
    then:
    - error: 'There are uncommited changes'
  - print: "Tagging project '#{cvs_tag}'"
  - "git tag -a 'RELEASE-#{version}' -m 'Release #{version}'"
  - "git push --tags"

- target:      clean
  description: Clean generated files
  script:
  - rmdir: :clean_dirs
  - rm:    :clean_files

- target:      all
  depends:     [clean, gem]
  description: Generate the whole project

